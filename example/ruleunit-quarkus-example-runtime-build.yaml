# In this example we create a KogitoBuild responsible to build our service from source and then deploy it as
# a KogitoRuntime reference. Since they have the same name, they will be bound together through the built image.
apiVersion: rhpam.kiegroup.org/v1
kind: KogitoBuild
metadata:
  name: ruleunit-quarkus-example
spec:
  buildImage: quay.io/yournamespace/custom-builder-image:0.11
  gitSource:
    contextDir: ruleunit-quarkus-example
    uri: https://github.com/kiegroup/kogito-examples
  runtime: quarkus
  runtimeImage: quay.io/yournamespace/custom-runtime-image:0.11
  type: RemoteSource
---
# here we have an alternative way of building our fancy project, that's it from a local binary
# we can start a new build with "oc start-build ruleunit-quarkus-example --from-dir=target" from our project root
# both builds will share the same ImageStream, so every time we build a new version of the project, it will redeploy the KogitoRuntime counterpart
apiVersion: rhpam.kiegroup.org/v1
kind: KogitoBuild
metadata:
  name: ruleunit-quarkus-example-binary
spec:
  # here we need to set a target runtime since we are targeting the same Runtime and our name differs from the KogitoRuntime defined below
  targetKogitoRuntime: ruleunit-quarkus-example
  runtime: quarkus
  runtimeImage: quay.io/yournamespace/custom-runtime-image:0.11
  type: Binary
---
apiVersion: rhpam.kiegroup.org/v1
kind: KogitoRuntime
metadata:
  name: ruleunit-quarkus-example
spec:
  replicas: 1

